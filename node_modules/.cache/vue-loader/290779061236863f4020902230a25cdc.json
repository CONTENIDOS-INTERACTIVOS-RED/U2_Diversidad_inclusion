{"remainingRequest":"/home/runner/work/U2_Diversidad_inclusion/U2_Diversidad_inclusion/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Diversidad_inclusion/U2_Diversidad_inclusion/src/views/curso/Tema2.vue?vue&type=template&id=6f7fb7c7&lang=pug&","dependencies":[{"path":"/home/runner/work/U2_Diversidad_inclusion/U2_Diversidad_inclusion/src/views/curso/Tema2.vue","mtime":1736992474120},{"path":"/home/runner/work/U2_Diversidad_inclusion/U2_Diversidad_inclusion/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Diversidad_inclusion/U2_Diversidad_inclusion/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U2_Diversidad_inclusion/U2_Diversidad_inclusion/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U2_Diversidad_inclusion/U2_Diversidad_inclusion/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Diversidad_inclusion/U2_Diversidad_inclusion/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jdXJzby1tYWluLWNvbnRhaW5lci5wYi0zCiAgQmFubmVySW50ZXJubyg6c3ViVGl0dWxvPSInMi4gRGlzY3JpbWluYWNpw7NuLCBleGNsdXNpw7NuIHkgZXN0ZXJlb3RpcG9zJyIpCiAgLmNvbnRhaW5lci50YXJqZXRhLnRhcmpldGEtLWJsYW5jYS5weC00LnB0LTQucHgtbWQtNS5wdC1tZC01LnBiLTAub3ZlcmZsb3ctaGlkZGVuCiAgICAuYmctNS5tYi01KGRhdGEtYW9zPSJmYWRlLXVwIikKICAgICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLmFsaWduLWl0ZW1zLWNlbnRlcgogICAgICAgIC5jb2wtbGctYXV0by5kLW5vbmUuZC1sZy1ibG9jawogICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdDIvMS5wbmcnLCBhbHQ9JycpCiAgICAgICAgLmNvbC1sZwogICAgICAgICAgLnAtNAogICAgICAgICAgICBwLm1iLTMgVmFtb3MgYSB0cmFiYWphciBsb3MgY29uY2VwdG9zIGRlIGRpc2NyaW1pbmFjacOzbiwgZXhjbHVzacOzbiB5IGVzdGVyZW90aXBvcy4gQ2FkYSB1bm8gZGUgZWxsb3MgZXN0w6FuIGludGVyY29uZWN0YWRvcyB5IGVuIGVsIGRlc2Fycm9sbG8gZGVsIHRlbWEsIHNlIHBvZHLDoSBpciB0ZWppZW5kbyBlc3RhIHJlbGFjacOzbiwgYSBwYXJ0aXIgZGUgcmVmbGV4aW9uZXMuIFBhcmEgZGFyIGluaWNpbyBhIGVzdGUgaW1wb3J0YW50ZSB0ZW1hLCBlbXBlemFyZW1vcyBwb3IgY29ub2NlciBhbGdvIGRlIGxhIGhpc3RvcmlhIGRlIGxhIGRpc2NyaW1pbmFjacOzbiwgc2lnbmlmaWNhZG8gZSBpbmZsdWVuY2lhLgogICAgICAgICAgICBwLm1iLTAgTG9zIGludml0YW1vcyBhIGxlZXIgZWwgc2lndWllbnRlIGFwYXJ0YWRvIHNvYnJlIHVuYSBoaXN0b3JpYSByZWFsIGRlIGRpc2NyaW1pbmFjacOzbiB5IGV4Y2x1c2nDs24gcXVlIGxsZXZvIGEgc3VzIHByb3RhZ29uaXN0YXMgaGFzdGEgbGEgbXVlcnRlLgoKCiAgICBoMi5tYi0zKGRhdGEtYW9zPSJmYWRlLXVwIikgSGlzdG9yaWEgZGUgQW5hIEZyYW5rCiAgICAucm93Lmp1c3RpZnktY29udGVudC1jZW50ZXIubWItNShkYXRhLWFvcz0iZmFkZS11cCIpCiAgICAgIC5jb2wtc20tMTIuY29sLWxnLTcKICAgICAgICAgIHAubWItNCBBbmEgRnJhbmsgbmFjacOzIGVsIDEyIGRlIGp1bmlvIGRlIDE5MjkgZW4gRnJhbmtmdXJ0LCBBbGVtYW5pYS4gQ3VhbmRvIGxvcyBuYXppcyBsbGVnYXJvbiBhbCBwb2Rlciwgc3UgZmFtaWxpYSwgZGUgb3JpZ2VuIGp1ZMOtbywgc2UgdHJhc2xhZMOzIGEgw4Ftc3RlcmRhbSBwYXJhIGVzY2FwYXIgZGUgbGEgcGVyc2VjdWNpw7NuLiBTaW4gZW1iYXJnbywgZW4gMTk0MCwgbG9zIG5hemlzIGludmFkaWVyb24gbG9zIFBhw61zZXMgQmFqb3MgeSBjb21lbnphcm9uIGEgaW1wb25lciBsZXllcyBhbnRpanVkw61hcy4gRW4gMTk0MiwgbGEgZmFtaWxpYSBGcmFuayBzZSBlc2NvbmRpw7MgZW4gdW4gYW5leG8gc2VjcmV0byBkZXRyw6FzIGRlIGxhIGVtcHJlc2EgZGUgT3R0byBGcmFuaywgZWwgcGFkcmUgZGUgQW5hLiBQZXJtYW5lY2llcm9uIG9jdWx0b3MgZHVyYW50ZSBkb3MgYcOxb3MsIGhhc3RhIHF1ZSBmdWVyb24gZGVzY3ViaWVydG9zIHkgZGVwb3J0YWRvcyBhIGNhbXBvcyBkZSBjb25jZW50cmFjacOzbi4gQW5hIG11cmnDsyBkZSB0aWZvIGVuIGVsIGNhbXBvIGRlIEJlcmdlbi1CZWxzZW4sIGVuIDE5NDUuCiAgICAgICAgICBwLm1iLTAuZnctYm9sZCBFbiBzdSBkaWFyaW8sIEFuYSBGcmFuayBkZXNjcmliZSBsYXMgcmVzdHJpY2Npb25lcyB5IGxhIGRpc2NyaW1pbmFjacOzbiBxdWUgZW5mcmVudGFyb24gbG9zIGp1ZMOtb3MsIGJham8gZWwgcsOpZ2ltZW4gbmF6aToKICAgICAgLmNvbC1zbS0xMi5jb2wtbGctNS5kLW5vbmUuZC1sZy1ibG9jawogICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3QyLzIucG5nJywgYWx0PScnKQoKICAgIC5iZy1mdWxsLXdpZHRoLmJnLTEubWItMChkYXRhLWFvcz0iZmFkZS11cCIpCiAgICAgIC5weC01CiAgICAgICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLmFsaWduLWl0ZW1zLWNlbnRlcgogICAgICAgICAgLmNvbC1sZy00LmQtbm9uZS5kLWxnLWJsb2NrCiAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3QyLzMuc3ZnJywgYWx0PScnKQogICAgICAgICAgLmNvbC1zbS0xMi5jb2wtbGctNwogICAgICAgICAgICAgIHAubWItMCAiTGFzIG1lZGlkYXMgYW50aWp1ZMOtYXMgc2Ugc3VjZWRpZXJvbiByw6FwaWRhbWVudGUgeSBzZSBub3MgcHJpdsOzIGRlIG11Y2hhcyBsaWJlcnRhZGVzLiBMb3MganVkw61vcyBkZWJlbiBsbGV2YXIgdW5hIGVzdHJlbGxhIGRlIERhdmlkOyBkZWJlbiBlbnRyZWdhciBzdXMgYmljaWNsZXRhczsgbm8gbGVzIGVzdMOhIHBlcm1pdGlkbyB2aWFqYXIgZW4gdHJhbnbDrWE7IG5vIGxlcyBlc3TDoSBwZXJtaXRpZG8gdmlhamFyIGVuIGNvY2hlLCB0YW1wb2NvIGVuIGNvY2hlcyBwYXJ0aWN1bGFyZXM7IGxvcyBqdWTDrW9zIHNvbG8gcHVlZGVuIGhhY2VyIGxhcyBjb21wcmFzIGRlc2RlIGxhcyB0cmVzIGhhc3RhIGxhcyBjaW5jbyBkZSBsYSB0YXJkZTsgc29sbyBwdWVkZW4gaXIgYSB1bmEgcGVsdXF1ZXLDrWEganVkw61hOyBubyBwdWVkZW4gc2FsaXIgYSBsYSBjYWxsZSBkZXNkZSBsYXMgb2NobyBkZSBsYSBub2NoZSwgaGFzdGEgbGFzIHNlaXMgZGUgbGEgbWFkcnVnYWRhICjigKYpLiBOYWRpZSBlc2NhcGEgYSBlc3RhIHN1ZXJ0ZSwgYSBubyBzZXIgcXVlIHNlIGVzY29uZGEuIFvigKZdIE5vIHJlc3BldGFuIGEgbmFkaWU6IGFuY2lhbm9zLCBuacOxb3MsIGJlYsOpcywgbXVqZXJlcyBlbWJhcmF6YWRhcywgZW5mZXJtb3MsIHRvZG9zIHNpbiBleGNlcGNpw7NuLCBtYXJjaGFuIGNhbWlubyBkZSBsYSBtdWVydGXigJ0uIAogICAgLmJnLWZ1bGwtd2lkdGguYmctMTEubWItNShkYXRhLWFvcz0iZmFkZS11cCIpCiAgICAgIC5weC01LnB5LTQKICAgICAgICBwLm1iLTAuZnctYm9sZCBEZXNwdcOpcyBkZSBoYWJlciBsZcOtZG8gZWwgYW50ZXJpb3IgZnJhZ21lbnRvLCDCv3F1w6kgcG9kcsOtYSBkZWNpciBzb2JyZSBsYSBkaXNjcmltaW5hY2nDs24/CiAgICAjdF8yXzEudGl0dWxvLXNlZ3VuZG8oZGF0YS1hb3M9ImZhZGUtdXAiKQogICAgICBoMiAjW3NwYW4gMi4xXSDCv1F1w6kgZXMgbGEgZGlzY3JpbWluYWNpw7NuPwogICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLm1iLTUoZGF0YS1hb3M9ImZhZGUtdXAiKQogICAgICAuY29sLXNtLTEyLmNvbC1sZy04CiAgICAgICAgLmJnLTMucC00Lm1iLTQKICAgICAgICAgIHAubWItMCBMYSBwYWxhYnJhICJkaXNjcmltaW5hY2nDs24iIHRpZW5lIHN1cyByYcOtY2VzIGVuIGVsIGxhdMOtbi4gUHJvdmllbmUgZGVsIHTDqXJtaW5vICJkaXNjcmltaW5hdGlvIiwgcXVlIHNpZ25pZmljYSAic2VwYXJhY2nDs24iIG8gImRpc3RpbmNpw7NuIi4gRWwgdmVyYm8gImRpc2NyaW1pbmFyZSIgc2UgdXRpbGl6YWJhIHBhcmEgcmVmZXJpcnNlIGEgbGEgYWNjacOzbiBkZSBzZXBhcmFyIG8gZGlzdGluZ3VpciBlbnRyZSBkaWZlcmVudGVzIGVsZW1lbnRvcy4gQ29uIGVsIHRpZW1wbywgZWwgdMOpcm1pbm8gYWRxdWlyacOzIHVuIHNpZ25pZmljYWRvIG3DoXMgZXNwZWPDrWZpY28geSBuZWdhdGl2bywgcmVmaXJpw6luZG9zZSBhIGxhIGV4Y2x1c2nDs24gaW5qdXN0YSBkZSBwZXJzb25hcyBvIGdydXBvcywgcG9yIHJhem9uZXMgcmVsaWdpb3Nhcywgc29jaWFsZXMsIMOpdG5pY2FzIG8gZWNvbsOzbWljYXMuIEhpc3TDs3JpY2FtZW50ZSwgbGEgZGlzY3JpbWluYWNpw7NuIGhhIHNpZG8gdW5hIGhlcnJhbWllbnRhIGRlIGNvbnRyb2wgeSBkb21pbmFjacOzbiwgdXRpbGl6YWRhIHBhcmEganVzdGlmaWNhciBsYSBkZXNpZ3VhbGRhZCB5IGxhIG9wcmVzacOzbiBkZSBjaWVydG9zIGdydXBvcy4KICAgICAgICBwLm1iLTAgRW4gbGEgYWN0dWFsaWRhZCwgcGFyYSBNb250ZXMgKDIwMjMpLCBsYSBkaXNjcmltaW5hY2nDs24gc2UgZW50aWVuZGUgY29tbyBjdWFscXVpZXIgdHJhdG8gZGVzaWd1YWwgZSBpbmp1c3RvIGhhY2lhIHVuYSBwZXJzb25hIG8gZ3J1cG8sIGJhc2FkbyBlbiBjYXJhY3RlcsOtc3RpY2FzIGNvbW8gcmF6YSwgZ8OpbmVybywgb3JpZW50YWNpw7NuIHNleHVhbCwgZGlzY2FwYWNpZGFkLCBlbnRyZSBvdHJhcy4gRXN0ZSBjb25jZXB0byBoYSBldm9sdWNpb25hZG8gcGFyYSBpbmNsdWlyIG5vIHNvbG8gbGEgZXhjbHVzacOzbiwgc2lubyB0YW1iacOpbiBsYSBuZWdhY2nDs24gZGUgZGVyZWNob3MgeSBvcG9ydHVuaWRhZGVzLiAKICAgICAgLmNvbC1zbS0xMi5jb2wtbGctNC5kLW5vbmUuZC1sZy1ibG9jawogICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3QyLzQucG5nJywgYWx0PScnKQoKCiAgICAuYmctZnVsbC13aWR0aC5iZy1mb25kby0zLm1iLTAoZGF0YS1hb3M9ImZhZGUtdXAiKQogICAgICAucHgtNS5weS00CiAgICAgICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLm1iLTUKICAgICAgICAgIC5jb2wtc20tMTIuY29sLWxnLTQuZC1ub25lLmQtbGctYmxvY2sKICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdDIvNS5zdmcnLCBhbHQ9JycpCiAgICAgICAgICAuY29sLXNtLTEyLmNvbC1sZy04CiAgICAgICAgICAgIC5wLTQuYmctNi5tYi01CiAgICAgICAgICAgICAgLnJvdy5hbGlnbi1pdGVtcy1jZW50ZXIKICAgICAgICAgICAgICAgIC5jb2wtbGctYXV0by5kLW5vbmUuZC1sZy1ibG9jawogICAgICAgICAgICAgICAgICBpbWcoc3JjPSdAL2Fzc2V0cy9jdXJzby90Mi82LnN2ZycsIHN0eWxlPSdtYXgtd2lkdGg6IDkwcHgnKS5teC1hdXRvIAogICAgICAgICAgICAgICAgLmNvbC1sZwogICAgICAgICAgICAgICAgICBwLm1iLTAgI1tiIExhIGRpc2NyaW1pbmFjacOzbl0gZXMgdW4gcHJvYmxlbWEgZ2xvYmFsIHF1ZSBtYXJjYSBsYSB2aWRhIGRlIG1pbGxvbmVzIGRlIHBlcnNvbmFzLCBhbCBjb250aW51YXIgY29uIGxhcyBkZXNpZ3VhbGRhZGVzIHkgbGltaXRhciBsYXMgb3BvcnR1bmlkYWRlczsgbm8gc2UgcHVlZGUgYXZhbnphciBoYWNpYSBzb2NpZWRhZGVzIGp1c3RhcyB5IGVxdWl0YXRpdmFzLgogICAgICAgICAgICBwLm1iLTAgUG9yIGVuZGUsIGNvbXByZW5kZXIgc3VzIHJhw61jZXMgZXMgZWwgcHJpbWVyIHBhc28gcGFyYSBjb25zdHJ1aXIgdW4gZnV0dXJvIGRvbmRlIHRvZG9zIHRlbmdhbW9zIGxhcyBtaXNtYXMgcG9zaWJpbGlkYWRlczsgcGFyYSBsb2dyYXJsbywgZXMgbmVjZXNhcmlvIGNvbm9jZXIgY3XDoWxlcyBzb24gZXNvcyB0aXBvcyBkZSBkaXNjcmltaW5hY2nDs24gcXVlIGV4aXN0ZW4uCiAgICAgICAKICAgICAgICAjdF8yXzIudGl0dWxvLXNlZ3VuZG8oZGF0YS1hb3M9ImZhZGUtdXAiKQogICAgICAgICAgaDIgI1tzcGFuIDIuMl0gVGlwb3MgZGUgZGlzY3JpbWluYWNpw7NuCiAgICAgICAgcC5tYi0wLmZ3LWJvbGQgUG9kZW1vcyBlbmNvbnRyYXIgbG9zIHNpZ3VpZW50ZXMgdGlwb3MgZGUgZGlzY3JpbWluYWNpw7NuOgoKICAgIC5iZy03LnB4LTUucHktNC5tYi01KGRhdGEtYW9zPSJmYWRlLXVwIikKICAgICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLm1iLTAKICAgICAgICAuY29sLXNtLTEyLmNvbC1sZy04CiAgICAgICAgICBJbWFnZW5JbmZvZ3JhZmljYS5jb2xvci1hY2VudG8tY29udGVuaWRvLm1iLTAKICAgICAgICAgICAgdGVtcGxhdGUodi1zbG90OmltYWdlbikKICAgICAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3QyLzcuc3ZnJywgYWx0PSdJbmZvZ3JhZsOtYSBzb2JyZSB0aXBvcyBkZSBkaXNjcmltaW5hY2nDs24nKQogICAgICAgICAgICAKICAgICAgICAgICAgLnRhcmpldGEuYmctd2hpdGUucC0zKHg9IjMuNSUiIHk9Ijg4JSIgbnVtZXJvPSIrIikKICAgICAgICAgICAgICAuaDUubWItMiBEaXNjcmltaW5hY2nDs24gcmFjaWFsIG8gw6l0bmljYQogICAgICAgICAgICAgIHAgU2UgYmFzYSBlbiBsYSByYXphIG8gZXRuaWEgZGUgdW5hIHBlcnNvbmEuIFBvciBlamVtcGxvLCBlbiBDb2xvbWJpYSwgc2Vnw7puIGxhIE9OVSAoMjAyMyksIGxhIGRpc2NyaW1pbmFjacOzbiByYWNpYWwgYWZlY3RhIHByaW5jaXBhbG1lbnRlIGEgbGFzIGNvbXVuaWRhZGVzIGFmcm9jb2xvbWJpYW5hcyBlIGluZMOtZ2VuYXMuIFVuIGVqZW1wbG8gZXMgbGEgc2VncmVnYWNpw7NuIGVuIGVsIGFjY2VzbyBhIHNlcnZpY2lvcyBiw6FzaWNvcyBjb21vIGxhIGVkdWNhY2nDs24geSBsYSBzYWx1ZC4gTGFzIGNvbXVuaWRhZGVzIGFmcm9jb2xvbWJpYW5hcywgZXNwZWNpYWxtZW50ZSBlbiB6b25hcyBydXJhbGVzLCBjb24gZnJlY3VlbmNpYSBlbmZyZW50YW4gYmFycmVyYXMgc2lnbmlmaWNhdGl2YXMgcGFyYSBhY2NlZGVyIGEgZXN0b3Mgc2VydmljaW9zLgoKICAgICAgICAgICAgLnRhcmpldGEuYmctd2hpdGUucC0zKHg9IjMuNSUiIHk9IjM3JSIgbnVtZXJvPSIrIikKICAgICAgICAgICAgICAuaDUubWItMiBEaXNjcmltaW5hY2nDs24gZGUgZ8OpbmVybwogICAgICAgICAgICAgIHAgRXN0w6EgcmVsYWNpb25hZGEgY29uIGVsIGfDqW5lcm8gdSBvcmllbnRhY2nDs24gc2V4dWFsLiBFbiBudWVzdHJvIHBhw61zLCBwb3IgZWplbXBsbywgc2Vnw7puIGVsIE1pbmlzdGVyaW8gZGUgSnVzdGljaWEgKDIwMjEpLCBsYXMgcGVyc29uYXMgTEdCVFErIGVuZnJlbnRhbiBkaXNjcmltaW5hY2nDs24gZW4gZGl2ZXJzb3Mgw6FtYml0b3MsIGluY2x1eWVuZG8gZWwgbGFib3JhbCB5IGVsIGVkdWNhdGl2by4gVW5vIGRlIGVzdG9zIGNhc29zIGVzIGxhIGRpc2NyaW1pbmFjacOzbiBlbiBlbCBhY2Nlc28gYSBlbXBsZW9zLCBkb25kZSBsYXMgcGVyc29uYXMgdHJhbnNnw6luZXJvIGVuZnJlbnRhbiBtYXlvcmVzIGRpZmljdWx0YWRlcyBwYXJhIHNlciBjb250cmF0YWRhcyBwb3IgZW1wcmVzYXMuCgogICAgICAgICAgICAudGFyamV0YS5iZy13aGl0ZS5wLTMoeD0iMjguNSUiIHk9IjQuNSUiIG51bWVybz0iKyIpCiAgICAgICAgICAgICAgLmg1Lm1iLTIgRGlzY3JpbWluYWNpw7NuIHBvciBlZGFkCiAgICAgICAgICAgICAgcCBWYSBkaXJpZ2lkYSBhIG5pw7FvcywgbmnDsWFzIHkgYWR1bHRvcyBtYXlvcmVzLiBMYSBkaXNjcmltaW5hY2nDs24gcG9yIGVkYWQsIGFmZWN0YSB0YW50byBhIGxvcyBqw7N2ZW5lcyBjb21vIGEgbG9zIGFkdWx0b3MgbWF5b3Jlcy4gTG9zIGrDs3ZlbmVzIHB1ZWRlbiBzZXIgZGlzY3JpbWluYWRvcyBlbiBlbCDDoW1iaXRvIGxhYm9yYWwgcG9yIGZhbHRhIGRlIGV4cGVyaWVuY2lhLCBtaWVudHJhcyBxdWUgbG9zIGFkdWx0b3MgbWF5b3JlcyBwdWVkZW4gc2VyIGV4Y2x1aWRvcyBkZSBvcG9ydHVuaWRhZGVzIGxhYm9yYWxlcywgZGViaWRvIGEgc3UgZWRhZC4gVW4gZWplbXBsbyBlcyBsYSBkaWZpY3VsdGFkIHF1ZSBlbmZyZW50YW4gbG9zIGFkdWx0b3MgbWF5b3JlcyBwYXJhIGVuY29udHJhciBlbXBsZW8sIGEgcGVzYXIgZGUgdGVuZXIgbGEgZXhwZXJpZW5jaWEgbmVjZXNhcmlhLgoKICAgICAgICAgICAgLnRhcmpldGEuYmctd2hpdGUucC0zKHg9IjczLjUlIiB5PSI1LjUlIiBudW1lcm89IisiKQogICAgICAgICAgICAgIC5oNS5tYi0yIERpc2NyaW1pbmFjacOzbiBwb3IgZGlzY2FwYWNpZGFkCiAgICAgICAgICAgICAgcCBFc3TDoSBiYXNhZGEgZW4gbGEgY2xhc2Ugc29jaWFsIG8gc2l0dWFjacOzbiBlY29uw7NtaWNhLiBMYSBkaXNjcmltaW5hY2nDs24gc29jaW9lY29uw7NtaWNhIGVzIHVuIHByb2JsZW1hIGdyYXZlIGVuIGxhcyBjaXVkYWRlcy4gUXVpZW5lcyB0aWVuZW4gbWVub3MgcmVjdXJzb3MsIHN1ZWxlbiBlbmZyZW50YXIgYmFycmVyYXMgcGFyYSBhY2NlZGVyIGEgc2VydmljaW9zIGLDoXNpY29zIHkgb3BvcnR1bmlkYWRlcywgc2llbmRvIHRyYXRhZG9zIGRlIG1hbmVyYSBpbmp1c3RhLiBFc3RvIHNlIGV2aWRlbmNpYSBlbiBlbCBzaXN0ZW1hIGp1ZGljaWFsLCBkb25kZSBsYXMgcGVyc29uYXMgZGUgYmFqb3MgcmVjdXJzb3MgcmVjaWJlbiB1biB0cmF0byBkZXNpZ3VhbCwgeSBlbiBsdWdhcmVzIHDDumJsaWNvcyBxdWUgbmllZ2FuIGVsIGFjY2VzbyBhIHF1aWVuZXMgbm8gY3VtcGxlbiBjb24gY2llcnRvcyBlc3TDoW5kYXJlcyBzb2NpYWxlcy4KCiAgICAgICAgICAgIC50YXJqZXRhLmJnLXdoaXRlLnAtMyh4PSI5Ni41JSIgeT0iMzYuNSUiIG51bWVybz0iKyIpCiAgICAgICAgICAgICAgLmg1Lm1iLTIgRGlzY3JpbWluYWNpw7NuIHJlbGlnaW9zYQogICAgICAgICAgICAgIHAgU2UgcmVmaWVyZSBhbCB0cmF0byBkZXNpZ3VhbCBlIGluanVzdG8gaGFjaWEgdW5hIHBlcnNvbmEgbyBncnVwbywgYmFzYWRvIGVuIHN1cyBjcmVlbmNpYXMgcmVsaWdpb3Nhcy4gRXN0byBwdWVkZSBpbmNsdWlyIGxhIGV4Y2x1c2nDs24sIGxhIG5lZ2FjacOzbiBkZSBkZXJlY2hvcywgbGEgdmlvbGVuY2lhIG8gZWwgaG9zdGlnYW1pZW50bywgZGViaWRvIGEgbGEgcmVsaWdpw7NuIHF1ZSBwcmFjdGljYW4uIFNlZ8O6biBBcmVsbGFubyAoMjAyMCksIGVuIENvbG9tYmlhLCB1biBjYXNvIG5vdGFibGUgZGUgZGlzY3JpbWluYWNpw7NuIHJlbGlnaW9zYSBvY3VycmnDsyBlbiBlbCBkZXBhcnRhbWVudG8gZGVsIFRvbGltYSwgZG9uZGUgZXN0dWRpYW50ZXMgeSBwcm9mZXNvcmVzIGRlIGRpZmVyZW50ZXMgbXVuaWNpcGlvcywgcmVwb3J0YXJvbiBzaXR1YWNpb25lcyBkZSBpbnRvbGVyYW5jaWEgZW4gaW5zdGl0dWNpb25lcyBlZHVjYXRpdmFzLgoKICAgICAgICAgICAgLnRhcmpldGEuYmctd2hpdGUucC0zKHg9Ijk2LjUlIiB5PSI4NyUiIG51bWVybz0iKyIpCiAgICAgICAgICAgICAgLmg1Lm1iLTIgRGlzY3JpbWluYWNpw7NuIHBvciBuYWNpb25hbGlkYWQKICAgICAgICAgICAgICBwIFNlIHJlZmllcmUgYWwgdHJhdG8gZGVzaWd1YWwgZSBpbmp1c3RvIGhhY2lhIHVuYSBwZXJzb25hLCBiYXNhZG8gZW4gc3UgcGHDrXMgZGUgb3JpZ2VuLiBFc3RvIHB1ZWRlIGluY2x1aXIgZXhjbHVzacOzbiBzb2NpYWwsIGRpc2NyaW1pbmFjacOzbiBsYWJvcmFsLCBuZWdhY2nDs24gZGUgc2VydmljaW9zIHkgZmFsdGEgZGUgYWNjZXNvIGEgZGVyZWNob3MgeSBvcG9ydHVuaWRhZGVzLiBDb21vIGJpZW4gc2FiZW1vcywgbnVlc3RybyBwYcOtcyBhbGJlcmdhIHBlcnNvbmFzIGV4dHJhbmplcmFzIGVuIGJ1c2NhIGRlIHVuIG1lam9yIGZ1dHVybzsgc2luIGVtYmFyZ28sIHNlZ8O6biBlbCBNaW5pc3RlcmlvIGRlbCBJbnRlcmlvciAoMjAxOCksIGVuIENvbG9tYmlhLCBsYSBkaXNjcmltaW5hY2nDs24gcG9yIG5hY2lvbmFsaWRhZCBhZmVjdGEgcHJpbmNpcGFsbWVudGUgYSBtaWdyYW50ZXMgeSByZWZ1Z2lhZG9zLCBlc3BlY2lhbG1lbnRlIGFxdWVsbG9zIHByb3ZlbmllbnRlcyBkZSBWZW5lenVlbGEuCiAgICAKICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWNlbnRlci5tYi01KGRhdGEtYW9zPSJmYWRlLXVwIikKICAgICAgLmNvbC1zbS0xMi5jb2wtbGctNC5kLW5vbmUuZC1sZy1ibG9jawogICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3QyLzgucG5nJywgYWx0PScnKQogICAgICAuY29sLXNtLTEyLmNvbC1sZy04CiAgICAgICAgLnAtNC5iZy0xLm1iLTUKICAgICAgICAgIC5yb3cuYWxpZ24taXRlbXMtY2VudGVyCiAgICAgICAgICAgIC5jb2wtbGctYXV0by5kLW5vbmUuZC1sZy1ibG9jawogICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3QyLzkuc3ZnJywgc3R5bGU9J21heC13aWR0aDogOTBweCcpLm14LWF1dG8gCiAgICAgICAgICAgIC5jb2wtbGcKICAgICAgICAgICAgICBwLm1iLTAgUG9yIGVqZW1wbG8sIGVuIENvbG9tYmlhLCBsYXMgcGVyc29uYXMgZGUgYmFqb3MgcmVjdXJzb3MsIG5vcm1hbG1lbnRlIHNvbiBlc3RpZ21hdGl6YWRhcyB5IHRpZW5lbiBtZW5vcyBhY2Nlc28gYSBvcG9ydHVuaWRhZGVzIGVkdWNhdGl2YXMgeSBsYWJvcmFsZXMuIEVzdG8gc2UgcHVlZGUgdmVyIHJlZmxlamFkbyBlbiBsYSBleGNsdXNpw7NuIGRlIHBlcnNvbmFzIGRlIGJham9zIHJlY3Vyc29zLCBkZSBjaWVydG9zIGVzcGFjaW9zIHDDumJsaWNvcyBvIHByaXZhZG9zLCBjb21vIGNlbnRyb3MgY29tZXJjaWFsZXMgbyByZXN0YXVyYW50ZXMsIGJham8gcHJldGV4dG9zIGNvbW8gZWwgImRlcmVjaG8gZGUgYWRtaXNpw7Nu4oCdLgogICAgICAgIHAubWItMCBBbGd1bm9zIGVqZW1wbG9zIGluY2x1eWVuIGEgbXVjaG9zIG1pZ3JhbnRlcyB2ZW5lem9sYW5vcyBxdWUgZW5mcmVudGFuIGRpZmljdWx0YWRlcyBwYXJhIGVuY29udHJhciBlbXBsZW8gZm9ybWFsLCBkZWJpZG8gYSBzdSBuYWNpb25hbGlkYWQuIE11Y2hhcyB2ZWNlcywgc2UgbGVzIG9mcmVjZSB0cmFiYWpvIGVuIGNvbmRpY2lvbmVzIHByZWNhcmlhcyB5IGNvbiBzYWxhcmlvcyBpbmZlcmlvcmVzIGEgbG9zIGRlIGxvcyBjb2xvbWJpYW5vcy4gU2Vnw7puIEFyZWxsYW5vICgyMDIwKSwgbG8gYW50ZXJpb3IgdGFtYmnDqW4gc2UgaGEgdmlzdG8gZW4gYWxndW5hcyBjb211bmlkYWRlcyBhbCBzZXIgZXhjbHVpZG9zIGRlIGFjdGl2aWRhZGVzIHNvY2lhbGVzIHkgZW5mcmVudGFuIGFjdGl0dWRlcyBob3N0aWxlcyBwb3IgcGFydGUgZGUgbG9zIHJlc2lkZW50ZXMgbG9jYWxlcywgcG9ycXVlIGVuIG9jYXNpb25lcywgaGFuIHNpZG8gZXN0aWdtYXRpemFkb3MgZGViaWRvIGEgbG9zIGFjdG9zIGRlbGljdGl2b3MgY29tZXRpZG9zIHBvciB1bmEgbWlub3LDrWEuIAogICAgLmJnLWZ1bGwtd2lkdGguYmctZm9uZG8tNC5tYi0wKGRhdGEtYW9zPSJmYWRlLXVwIikKICAgICAgLnB4LTUucHktNAogICAgICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWNlbnRlci5tYi01CiAgICAgICAgICAuY29sLXNtLTEyLmNvbC1sZy04CiAgICAgICAgICAgIHAubWItNCBFcyBmdW5kYW1lbnRhbCByZWNvcmRhciBxdWUgbGEgbWF5b3LDrWEgZGUgbG9zIG1pZ3JhbnRlcyB2ZW5lem9sYW5vcyB2aWVuZW4gYSBDb2xvbWJpYSBjb24gbGEgaW50ZW5jacOzbiBkZSB0cmFiYWphciBhcmR1YW1lbnRlIHkgYnVzY2FyIHVuIGZ1dHVybyBtZWpvciBwYXJhIHN1cyBmYW1pbGlhcy4gRXMgaW5qdXN0byBqdXpnYXIgYSB0b2RvcyBwb3IgbGFzIGFjY2lvbmVzIGRlIHVub3MgcG9jb3MsIHB1ZXN0byBxdWUgbXVjaG9zIGNvbnRyaWJ1eWVuIHBvc2l0aXZhbWVudGUgYSBsYSBzb2NpZWRhZCB5IG1lcmVjZW4gc2VyIHRyYXRhZG9zIGNvbiByZXNwZXRvIHkgZGlnbmlkYWQuCiAgICAgICAgICAgIC5wLTQuYmctMTIubWItNQogICAgICAgICAgICAgIHAubWItMCBFbiBjb25jbHVzacOzbiwgY29ub2NlciBsb3MgZGlmZXJlbnRlcyB0aXBvcyBkZSBkaXNjcmltaW5hY2nDs24sIGNvbW8gbGEgcmFjaWFsLCBkZSBnw6luZXJvLCBwb3Igb3JpZW50YWNpw7NuIHNleHVhbCwgZWRhZCwgZGlzY2FwYWNpZGFkLCBzb2Npb2Vjb27Ds21pY2EsIHJlbGlnaW9zYSB5IHBvciBuYWNpb25hbGlkYWQsIGF5dWRhIGEgaWRlbnRpZmljYXIgeSBjb21iYXRpciBhY3RpdHVkZXMgeSBwcsOhY3RpY2FzIGRpc2NyaW1pbmF0b3JpYXMsIHByb21vdmllbmRvIGxhIGVxdWlkYWQgeSBsYSBqdXN0aWNpYSBzb2NpYWwuIFVuIGRvY2VudGUgYmllbiBwcmVwYXJhZG8gcHVlZGUgaW5mbHVpciBwb3NpdGl2YW1lbnRlLCBlbiBzdXMgZXN0dWRpYW50ZXMsIGZvbWVudGFuZG8gdmFsb3JlcyBkZSByZXNwZXRvIHkgZW1wYXTDrWEgcXVlIGNvbnRyaWJ1eWVuIGEgdW5hIHNvY2llZGFkIG3DoXMganVzdGEgeSB1bmlkYS4KICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAuY29sLXNtLTEyLmNvbC1sZy00LmQtbm9uZS5kLWxnLWJsb2NrCiAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3QyLzEwLnN2ZycsIGFsdD0nJykKICAgICAgICAjdF8yXzMudGl0dWxvLXNlZ3VuZG8KICAgICAgICAgIGgyICNbc3BhbiAyLjNdIMK/UXXDqSBlcyBsYSBleGNsdXNpw7NuPwogICAgICAgIHAubWItMCBBbnRlcyBkZSBhYm9yZGFyIGVsIGNvbmNlcHRvIGRlIGV4Y2x1c2nDs24gY29tbyB0YWwsIHN1IGhpc3RvcmlhIHkgY2FyYWN0ZXLDrXN0aWNhcywgbGUgaW52aXRhbW9zIGEgdmVyIGVsIHNpZ3VpZW50ZSBjb3J0b21ldHJhamUgYW5pbWFkbyBiYXNhZG8gZW4gdW5hIGhpc3RvcmlhIHJlYWwgc29icmUgY8OzbW8gc2UgcHVlZGUgdmVyIGVzdGUgZmVuw7NtZW5vIGVuIGxhIHZpZGEgZGUgdW5hIHBlcnNvbmEuCiAgICAgICAgCiAgICAuYmctZnVsbC13aWR0aC5iZy1jb2xvci13aGl0ZS5zaGFkb3ctc29mdC5tYi0wKGRhdGEtYW9zPSJmYWRlLXVwIikKICAgICAgLnB4LTQucC1tZC01CiAgICAgICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLmFsaWduLWl0ZW1zLWNlbnRlcgogICAgICAgICAgLmNvbC1zbS0xMi5jb2wtbGctMTIubWItMAogICAgICAgICAgICAucHktMC5weC1sZy01CiAgICAgICAgICAgICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtYXJvdW5kLmFsaWduLWl0ZW1zLWNlbnRlcgogICAgICAgICAgICAgICAgLmNvbC1tZC1hdXRvLmQtbm9uZS5kLWxnLWJsb2NrCiAgICAgICAgICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL3RlbXBsYXRlL2JnLWljb25vLXZpZGVvLnN2ZyIsIHN0eWxlPSJ3aWR0aDogNjBweDsiKQogICAgICAgICAgICAgICAgLmNvbAogICAgICAgICAgICAgICAgICAucm93Lmp1c3RpZnktY29udGVudC1iZXR3ZWVuLmFsaWduLWl0ZW1zLWNlbnRlcgogICAgICAgICAgICAgICAgICAgIC5jb2wubWItMC5tYi1zbS0wCiAgICAgICAgICAgICAgICAgICAgICBoMy5tYi0xIFBhc3RvcmFsIFNvY2lhbCBlIElubm92YWNpw7NuIAogICAgICAgICAgICAgICAgICAgICAgcC5tYi0wIEFudGVzIGRlIGFib3JkYXIgUGFzdG9yYWwgU29jaWFsIGUgSW5ub3ZhY2nDs24g4oCTIE1hZHJpZC4gKDIwMjApLiBFWENMVVNJw5NOICwgbG8gaW52aXRhbW9zIGEgdmVyIGVsIHNpZ3VpZW50ZSB2aWRlby4KICAgICAgICAgICAgICAgICAgICAuY29sLXNtLWF1dG8KICAgICAgICAgICAgICAgICAgICAgIGEuYm90b24uY29sb3ItYWNlbnRvLWJvdG9uZXMudGV4dG8tYmxhbmNvKGhyZWY9J2h0dHBzOi8veW91dHUuYmUvd3o4VTlZTU5FTUk/c2k9UTFvWDVlZ3FEMU5qZ1BkVScgdGFyZ2V0PSJfYmxhbmsiKQogICAgICAgICAgICAgICAgICAgICAgICBzcGFuIFZlciB2aWRlbwogICAgICAgICAgICAgICAgICAgICAgICBpLmZhcy5mYS1hcnJvdy1yaWdodAoKCgogICAgLmJnLWZ1bGwtd2lkdGguYmctMTMubWItMChkYXRhLWFvcz0iZmFkZS11cCIpCiAgICAgIC5weC01LnB5LTQKICAgICAgICBwLm1iLTAuZnctYm9sZCBEZXNwdcOpcyBkZSByZWZsZXhpb25hciB1biBwb2NvIHNvYnJlIGxvIGFudGVyaW9yLCB5IGNvbiBhbGd1bmFzIG5vY2lvbmVzIGRlbCBzaWduaWZpY2FkbyBkZSBsYSBwYWxhYnJhIOKAnGV4Y2x1c2nDs27igJ0sIGNvbmNlcHR1YWxpY2Vtb3MuIAogICAgLmJnLWZ1bGwtd2lkdGguYmctMTAubWItNShkYXRhLWFvcz0iZmFkZS11cCIpCiAgICAgIC5wLTUKICAgICAgICAucm93Lmp1c3RpZnktY29udGVudC1jZW50ZXIuYWxpZ24taXRlbXMtY2VudGVyCiAgICAgICAgICAuY29sLWxnLTUuZC1ub25lLmQtbGctYmxvY2sKICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3QyLzExLnBuZycsIGFsdD0nJykKICAgICAgICAgIC5jb2wtbGctNwogICAgICAgICAgICAgaDIubWItNCDCv1F1w6kgZXMgbGEgZXhjbHVzacOzbj8KICAgICAgICAgICAgIHAubWItNCBMYSBleGNsdXNpw7NuIHNvY2lhbCBlcyB1biBmZW7Ds21lbm8gY29tcGxlam8gcXVlIGxpbWl0YSBsYSBwYXJ0aWNpcGFjacOzbiBwbGVuYSBkZSBpbmRpdmlkdW9zIHkgZ3J1cG9zIGVuIGxhIHZpZGEgZWNvbsOzbWljYSwgcG9sw610aWNhIHkgc29jaWFsLCBwZXJwZXR1YW5kbyBkZXNpZ3VhbGRhZGVzIGVzdHJ1Y3R1cmFsZXMuIEVuIGVsIFBERiAjW2IgUXXDqSBlcyBsYSBleGNsdXNpw7NuXSwgc2UgZXhwbG9yYW4gbG9zIGNvbmNlcHRvcyBmdW5kYW1lbnRhbGVzLCBsYXMgdGVvcsOtYXMgZGUgYXV0b3JlcyBkZXN0YWNhZG9zIGNvbW8gSGlsYXJ5IFNpbHZlciB5IFJvYmVydCBDYXN0ZWwsIHkgY2Fzb3MgcHLDoWN0aWNvcyBxdWUgaWx1c3RyYW4gY8OzbW8gc2UgbWFuaWZpZXN0YSBlc3RlIHByb2Nlc28gZW4gZGlmZXJlbnRlcyBjb250ZXh0b3MgaGlzdMOzcmljb3MgeSBjb250ZW1wb3LDoW5lb3MuIEVzdGUgYW7DoWxpc2lzIHByb3BvcmNpb25hIGhlcnJhbWllbnRhcyBwYXJhIGNvbXByZW5kZXIgbGFzIGNhdXNhcywgZGltZW5zaW9uZXMgeSBlZmVjdG9zIGRlIGxhIGV4Y2x1c2nDs24sIGRlc3RhY2FuZG8gbGEgaW1wb3J0YW5jaWEgZGUgcG9sw610aWNhcyBpbmNsdXNpdmFzLiBBIHRyYXbDqXMgZGUgZWplbXBsb3MgY29tbyBsYSBwcmVjYXJpZWRhZCBsYWJvcmFsIGVuIEV1cm9wYSB5IGxhcyBiYXJyZXJhcyBlZHVjYXRpdmFzIGVuIHpvbmFzIHJ1cmFsZXMgZGUgQ29sb21iaWEsIHNlIGV4YW1pbmFuIGVzdHJhdGVnaWFzIHBhcmEgZW5mcmVudGFyIGVzdGUgZGVzYWbDrW8gZ2xvYmFsIHkgcHJvbW92ZXIgdW5hIHNvY2llZGFkIG3DoXMgZXF1aXRhdGl2YS4KICAgICAgICAgICAgIGEuYW5leG8ubWItNC5iZy13aGl0ZS53LWZpdCg6aHJlZj0nb2J0ZW5lckxpbmsoIi9kb3dubG9hZHMvZXhjbHVzaW9uLnBkZiIpJyB0YXJnZXQ9J19ibGFuaycpCiAgICAgICAgICAgICAgIC5hbmV4b19faWNvbm8oOnN0eWxlPSd7ImJhY2tncm91bmQtY29sb3IiOiAiI0ZDREZEQiJ9JykKICAgICAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvdGVtcGxhdGUvaWNvbm8tcGRmLnN2ZycpCiAgICAgICAgICAgICAgIC5hbmV4b19fdGV4dG8KICAgICAgICAgICAgICAgICAgcCA8c3Ryb25nPkFuZXhvLiA8L3N0cm9uZz4gwr9RdcOpIGVzIGxhIGV4Y2x1c2nDs24/CgogICAgI3RfMl80LnRpdHVsby1zZWd1bmRvKGRhdGEtYW9zPSJmYWRlLXVwIikKICAgICAgaDIgI1tzcGFuIDIuNF0gTWFuaWZlc3RhY2lvbmVzIGRlIGxhIGV4Y2x1c2nDs24KICAgIHAubWItNChkYXRhLWFvcz0iZmFkZS11cCIpIFBhcmEgY29ub2NlciBzb2JyZSBlc3RhIHRlbcOhdGljYSwgbG8gaW52aXRhbW9zIGEgdmVyIGVsIHNpZ3VpZW50ZSB2aWRlby4KICAgIC5iZy1mdWxsLXdpZHRoLmJnLWZvbmRvLXNsaWRlci5tYi0wKGRhdGEtYW9zPSJmYWRlLXVwIikKICAgICAgLnB4LTUucHktNAogICAgICAgICAgLnZpZGVvCiAgICAgICAgICAgIGlmcmFtZSh3aWR0aD0iNTYwIiBoZWlnaHQ9IjMxNSIgc3JjPSJodHRwczovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC9UclBMOGNyb3E4MCIgdGl0bGU9IllvdVR1YmUgdmlkZW8gcGxheWVyIiBmcmFtZWJvcmRlcj0iMCIgYWxsb3c9ImFjY2VsZXJvbWV0ZXI7IGF1dG9wbGF5OyBjbGlwYm9hcmQtd3JpdGU7IGVuY3J5cHRlZC1tZWRpYTsgZ3lyb3Njb3BlOyBwaWN0dXJlLWluLXBpY3R1cmUiIGFsbG93ZnVsbHNjcmVlbikKICAgIC5iZy1mdWxsLXdpZHRoLmJnLWZvbmRvLTEubWItNShkYXRhLWFvcz0iZmFkZS11cCIpCiAgICAgIC5wLTQuYmctMTAubWItMAogICAgICAgIC5yb3cuYWxpZ24taXRlbXMtY2VudGVyCiAgICAgICAgICAuY29sLWxnLWF1dG8uZC1ub25lLmQtbGctYmxvY2sKICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdDIvMTIuc3ZnJywgc3R5bGU9J21heC13aWR0aDogOTBweCcpLm14LWF1dG8gICAgICAgICAKICAgICAgICAgIC5jb2wtbGcKICAgICAgICAgICAgcC5tYi0wIFNpIGJpZW4gaGVtb3MgcHJvZnVuZGl6YWRvIGVuIGxhIGV4Y2x1c2nDs24gc29jaWFsLCBkZWJpZG8gYSBzdSBjb21wbGVqaWRhZCB5IHN1IHByb2Z1bmRvIGltcGFjdG8gZW4gbGFzIHBlcnNvbmFzLCBlcyBpbXBvcnRhbnRlIHJlY29yZGFyIHF1ZSBlc3RhIGVzIHNvbG8gdW5hIGRlIGxhcyBtdWNoYXMgZm9ybWFzIGRlIGV4Y2x1c2nDs24gcXVlIGV4aXN0ZW4uIAoKICAgICN0XzJfNS50aXR1bG8tc2VndW5kbyhkYXRhLWFvcz0iZmFkZS11cCIpCiAgICAgIGgyICNbc3BhbiAyLjVdIMK/UXXDqSBzb24gbG9zIGVzdGVyZW90aXBvcyB5IGxvcyBwZXJqdWljaW9zPyAKICAgIHAubWItNChkYXRhLWFvcz0iZmFkZS11cCIpIEEgY29udGludWFjacOzbiwgZXhwbG9yYXJlbW9zIGPDs21vIGxvcyBwcmVqdWljaW9zIHkgbG9zIGVzdGVyZW90aXBvcyBlc3TDoW4gcHJvZnVuZGFtZW50ZSBjb25lY3RhZG9zIHkgY8OzbW8gYW1ib3MganVlZ2FuIHVuIHBhcGVsIGZ1bmRhbWVudGFsIGVuIGxhIGRpc2NyaW1pbmFjacOzbiB5IGxhIGV4Y2x1c2nDs24gc29jaWFsLgogICAgLmJnLWZ1bGwtd2lkdGguYmctMTAubWItMChkYXRhLWFvcz0iZmFkZS11cCIpCiAgICAgIC5wLTUKICAgICAgICAucm93Lmp1c3RpZnktY29udGVudC1jZW50ZXIuYWxpZ24taXRlbXMtY2VudGVyCiAgICAgICAgICAuY29sLWxnLTcKICAgICAgICAgICAgIGgyLm1iLTQgwr9RdcOpIHNvbiBsb3MgZXN0ZXJlb3RpcG9zIHkgbG9zIHBlcmp1aWNpb3M/IAogICAgICAgICAgICAgcC5tYi00IExvcyBlc3RlcmVvdGlwb3MgeSBwcmVqdWljaW9zIHNvbiBjb25jZXB0b3MgZnVuZGFtZW50YWxlcyBwYXJhIGVudGVuZGVyIGPDs21vIGxhcyBpZGVhcyBwcmVjb25jZWJpZGFzIGluZmx1eWVuIGVuIG51ZXN0cmFzIHBlcmNlcGNpb25lcyB5IGNvbXBvcnRhbWllbnRvcyBoYWNpYSBkaWZlcmVudGVzIGdydXBvcyBzb2NpYWxlcy4gRW4gZWwgUERGICNbYiBRdcOpIHNvbiBsb3MgZXN0ZXJlb3RpcG9zIHkgbG9zIHByZWp1aWNpb3NdLCBzZSBhbmFsaXphbiBsYXMgZGVmaW5pY2lvbmVzLCBvcsOtZ2VuZXMgeSBlZmVjdG9zIGRlIGVzdG9zIGZlbsOzbWVub3MsIGFzw60gY29tbyBzdSByZWxhY2nDs24gY29uIGxhIGRpc2NyaW1pbmFjacOzbiB5IGxhIGRlc2lndWFsZGFkLiBBIHRyYXbDqXMgZGUgZWplbXBsb3MgcHLDoWN0aWNvcyB5IGFuYWxvZ8OtYXMsIHNlIGFib3JkYW4gbGFzIGZvcm1hcyBlbiBxdWUgZXN0YXMgYWN0aXR1ZGVzIGltcGFjdGFuIGxhcyBkaW7DoW1pY2FzIHNvY2lhbGVzIHkgZWR1Y2F0aXZhcywgb2ZyZWNpZW5kbyBoZXJyYW1pZW50YXMgcGFyYSBpZGVudGlmaWNhciB5IGNvbWJhdGlyIGVzdG9zIHNlc2dvcy4gRXN0ZSBlbmZvcXVlIGJ1c2NhIGZvbWVudGFyIHVuYSByZWZsZXhpw7NuIGNyw610aWNhIHNvYnJlIGPDs21vIHN1cGVyYXIgbGFzIGJhcnJlcmFzIHF1ZSBsaW1pdGFuIGxhIGVxdWlkYWQgeSBsYSBpbmNsdXNpw7NuIGVuIGRpdmVyc29zIGNvbnRleHRvcy4KICAgICAgICAgICAgIGEuYW5leG8ubWItNC5iZy13aGl0ZS53LWZpdCg6aHJlZj0nb2J0ZW5lckxpbmsoIi9kb3dubG9hZHMvZXN0ZXJlb3RpcG9zX3Blcmp1aWNpb3MucGRmIiknIHRhcmdldD0nX2JsYW5rJykKICAgICAgICAgICAgICAgLmFuZXhvX19pY29ubyg6c3R5bGU9J3siYmFja2dyb3VuZC1jb2xvciI6ICIjRkNERkRCIn0nKQogICAgICAgICAgICAgICAgICBpbWcoc3JjPSdAL2Fzc2V0cy90ZW1wbGF0ZS9pY29uby1wZGYuc3ZnJykKICAgICAgICAgICAgICAgLmFuZXhvX190ZXh0bwogICAgICAgICAgICAgICAgICBwIDxzdHJvbmc+QW5leG8uIDwvc3Ryb25nPiDCv1F1w6kgc29uIGxvcyBlc3RlcmVvdGlwb3MgeSBsb3MgcGVyanVpY2lvcz8gCiAgICAgICAgICAuY29sLWxnLTUuZC1ub25lLmQtbGctYmxvY2sKICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3QyLzEzLnBuZycsIGFsdD0nJykKICAgIC5iZy1mdWxsLXdpZHRoLmJnLTE0Lm1iLTUoZGF0YS1hb3M9ImZhZGUtdXAiKQogICAgICAucHgtNS5weS00CiAgICAgICAgcC5tYi0wLmZ3LWJvbGQgVGVuaWVuZG8gY2xhcm8gbG8gYW50ZXJpb3IsIGNvbnRpbnVlbW9zIGNvbiBsb3Mgcm9sZXMgcXVlLCBzZWfDum4gTW9udGVzaW5vcyAoMjAxNiksIGxvcyBlc3RlcmVvdGlwb3MgZGVzZW1wZcOxYW46CgogICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLm1iLTUoZGF0YS1hb3M9ImZhZGUtdXAiKQogICAgICAuY29sLXNtLTEyLmNvbC1sZy00LmQtbm9uZS5kLWxnLWJsb2NrCiAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdDIvMTQucG5nJykKICAgICAgLmNvbC1zbS0xMi5jb2wtbGctOAogICAgICAgIExpbmVhVGllbXBvRC5jb2xvci1zZWN1bmRhcmlvLmxhcmdlCiAgICAgICAgICBkaXYobnVtZXJvPScxJyB0aXR1bG89J0Z1bmNpw7NuIGNvZ25pdGl2YScpIEVuIGVsIGFzcGVjdG8gY29nbml0aXZvLCBsb3MgZXN0ZXJlb3RpcG9zIGFmZWN0YW4gY8OzbW8gbGFzIHBlcnNvbmFzIGVudGllbmRlbiBlbCBtdW5kbyBxdWUgbGVzIHJvZGVhLiBQb3IgZWplbXBsbywgc2kgYWxndWllbiBoYSBhcHJlbmRpZG8gcXVlIGxvcyBlc3R1ZGlhbnRlcyBkZSB1bmEgZGV0ZXJtaW5hZGEgY3VsdHVyYSBzb24gbXV5IGVzdHVkaW9zb3MsIHB1ZWRlIGFzdW1pciBxdWUgdG9kb3MgbG9zIGVzdHVkaWFudGVzIGRlIGVzYSBjdWx0dXJhLCBzb24gYXPDrS4gRXN0b3Mgc2lnbmlmaWNhZG9zIHNlIGVuc2XDsWFuIGVuIGxhIGVzY3VlbGEsIGVuIGNhc2EgeSBlbiBsYSBjb211bmlkYWQsIHkgcHVlZGVuIHZvbHZlcnNlIHRhbiBjb211bmVzIHF1ZSBsYXMgcGVyc29uYXMgbG9zIHV0aWxpemFuIHBhcmEgaW50ZXJwcmV0YXIgbGEgcmVhbGlkYWQuIEVzdG8gZXMgZXNwZWNpYWxtZW50ZSBjaWVydG8gY3VhbmRvIHNlIHRyYXRhIGRlIGN1bHR1cmFzIGRpZmVyZW50ZXMsIGRvbmRlIGVsIGlkaW9tYSB5IGxhcyBpbcOhZ2VuZXMgcHVlZGVuIGluZmx1aXIgZW4gY8OzbW8gc2UgcGVyY2liZW4uCiAgICAgICAgICBkaXYobnVtZXJvPScyJyB0aXR1bG89J0Z1bmNpw7NuIHNvY2lhbCcpIERlc2RlIHVuIGVuZm9xdWUgc29jaWFsLCBsb3MgZXN0ZXJlb3RpcG9zIGF5dWRhbiBhIHF1ZSBsb3MgZ3J1cG9zIHNlIG1hbnRlbmdhbiB1bmlkb3MsIHBlcm8gdGFtYmnDqW4gcHVlZGVuIGdlbmVyYXIgYWN0aXR1ZGVzIG5lZ2F0aXZhcyBoYWNpYSBhcXVlbGxvcyBxdWUgc29uIGRpc3RpbnRvcy4gUG9yIGVqZW1wbG8sIGVuIHVuIGdydXBvIGRlIGFtaWdvcyBxdWUgY29tcGFydGVuIGVsIG1pc21vIGludGVyw6lzLCBwdWVkZW4gc2VudGlyIHVuYSBmdWVydGUgY29uZXhpw7NuIGVudHJlIGVsbG9zLCBwZXJvIGFsIG1pc21vIHRpZW1wbyBwdWVkZW4gZXhjbHVpciBhIHF1aWVuZXMgbm8gY29tcGFydGVuIGVzZSBpbnRlcsOpcy4gRXN0byBtdWVzdHJhIGVsIGxhZG8gbmVnYXRpdm8gZGUgbG9zIGVzdGVyZW90aXBvcywgcHVlc3RvIHF1ZSBsYSBwcm90ZWNjacOzbiBkZWwgZ3J1cG8gcHVlZGUgbGxldmFyIGEgcmVjaGF6YXIgYSBsb3MgcXVlIHNvbiBjb25zaWRlcmFkb3MgImRpZmVyZW50ZXMiLgogICAgICAgICAgZGl2KG51bWVybz0nMycgdGl0dWxvPSdGdW5jacOzbiBsaXRlcmFyaWEnKSBFbiBsYSBsaXRlcmF0dXJhLCBsb3MgZXN0ZXJlb3RpcG9zIHNvbiB1dGlsaXphZG9zIGNvbW8gaGVycmFtaWVudGFzIHF1ZSBwZXJtaXRlbiBhIGxvcyBhdXRvcmVzIGNvbmVjdGFyIGNvbiBzdXMgbGVjdG9yZXMuIFBvciBlamVtcGxvLCB1biBlc2NyaXRvciBwdWVkZSBkZXNjcmliaXIgYSB1biBwZXJzb25hamUgY29tbyAiZWwgdMOtcGljbyBjaGljbyBxdWUgc2llbXByZSBsbGVnYSB0YXJkZSIsIHkgZXN0byBheXVkYSBhIHF1ZSBlbCBsZWN0b3IgZW50aWVuZGEgcsOhcGlkYW1lbnRlLCBlbCB0aXBvIGRlIHBlcnNvbmEgcXVlIGVzLCBzaW4gbmVjZXNpZGFkIGRlIHVuYSBleHBsaWNhY2nDs24gbGFyZ2EuCgogICAgLmJnLWZ1bGwtd2lkdGguYmctMTUubWItNShkYXRhLWFvcz0iZmFkZS11cCIpCiAgICAgIC5weC01CiAgICAgICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLmFsaWduLWl0ZW1zLWNlbnRlcgogICAgICAgICAgLmNvbC1zbS0xMi5jb2wtbGctNwogICAgICAgICAgICAgIHAubWItMCBFbiB0b2RvIGNhc28sIGluZGVwZW5kaWVudGVtZW50ZSBkZSBzdXMgZnVuY2lvbmVzIGxvcyBlc3RlcmVvdGlwb3Mgc29uIHBlcnBldHVhZG9zIGEgdHJhdsOpcyBkZSBsb3MgbWVkaW9zIGRlIGNvbXVuaWNhY2nDs24geSBsYSBjdWx0dXJhIHBvcHVsYXIsIGRvbmRlIGNpZXJ0b3MgZ3J1cG9zIHNvbiByZXByZXNlbnRhZG9zIGRlIG1hbmVyYSBsaW1pdGFkYSBvIGRpc3RvcnNpb25hZGEuIEVzdGEgcmVwcmVzZW50YWNpw7NuIHB1ZWRlIGluZmx1aXIgZW4gbGEgcGVyY2VwY2nDs24gcMO6YmxpY2EgeSBhZmVjdGFyIGxhIGF1dG9lc3RpbWEgZGUgYXF1ZWxsb3MgcXVlIHNvbiBvYmpldG8gZGUgZXN0b3MgZXN0ZXJlb3RpcG9zLCBQb3IgbG8gdGFudG8sIGVzIGVzZW5jaWFsIGN1ZXN0aW9uYXIgeSBkZXNhZmlhciBlc3RvcyBlc3RlcmVvdGlwb3MsIHByb21vdmllbmRvIHVuYSBjb21wcmVuc2nDs24gbcOhcyByZWFsIHkgZGl2ZXJzYSwgZGUgbGEgZXhwZXJpZW5jaWEgaHVtYW5hLgogICAgICAgICAgLmNvbC1sZy00LmQtbm9uZS5kLWxnLWJsb2NrCiAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3QyLzE1LnN2ZycsIGFsdD0nJykKCgoKICAgIC5iZy1mdWxsLXdpZHRoLmJvcmRlci10b3AuY29sb3ItcHJpbWFyaW8KICAgICAgLnAtNC5wLW1kLTUKICAgICAgICBoMiBNQVRFUklBTCBDT01QTEVNRU5UQVJJTwogICAgICAgIC5yb3cubWF0ZXJpYWwtY29tcGxlbQogICAgICAgICAgLmNvbC0xMi5jb2wtbWQtNi5jb2wtbGctNwogICAgICAgICAgICBwIExvcyBpbnZpdGFtb3MgYSBleHBsb3JhciBlbCBtYXRlcmlhbCBjb21wbGVtZW50YXJpbyBkZSBlc3RlIGN1cnNvLCBlbiBlc3RhIHNlY2Npw7NuIGVuY29udHJhcsOhIHJlY3Vyc29zIHF1ZSBsZSBwZXJtaXRpcsOhbiBwcm9mdW5kaXphciAgeSBlbnJpcXVlY2VyIHN1IGFwcmVuZGl6YWplIGVuIGxvcyB0ZW1hcyB0cmF0YWRvcyBlbiBlc3RhIHVuaWRhZC4KICAgICAgICAgICAgLy8tIFJlZmVyZW5jaWEgY29uIGVubGFjZSAKICAgICAgICAgICAgcC5kLWZsZXgubXktNAogICAgICAgICAgICAgIGltZy5tZS0zKHNyYz0nQC9hc3NldHMvY29tcG9uZW50ZXMvYm9vay5zdmcnIDpzdHlsZT0neyJtYXgtd2lkdGgiOiIxNnB4In0nKQogICAgICAgICAgICAgIGEoaHJlZj0naHR0cHM6Ly9yZXBvc2l0b3J5LnVuaWxpYnJlLmVkdS5jby9iaXRzdHJlYW0vaGFuZGxlLzEwOTAxLzI4MzE2L0FSVElDVUxPJTIwLSUyMCUyMEVTUEVDSUFMSVpBQ0lPTiUyMFVOSUxJQlJFJTIwLSUyMCUyMFJhY2lzbW8lMjB5JTIwRGlzY3JpbWluYWNpb24lMjBlbiUyMENvbG9tYmlhLi4uLi4uLi4lMjBBVkFOQ0UuLi5wZGY/c2VxdWVuY2U9MScgdGFyZ2V0PSdfYmxhbmsnIHJlbD0nbm9vcGVuZXIgbm9yZWZlcnJlcicpIENpZnVlbnRlcywgUi5ELkcuICgyMDIzKS4gUmFjaXNtbyB5IGRpc2NyaW1pbmFjacOzbiBlbiBDb2xvbWJpYTsgdW5hIGZvcm1hIGRlIGV4Y2x1c2nDs24gc29jaWFsLCBsYWJvcmFsLCBwb2zDrXRpY2EgeSBlY29uw7NtaWNhIGEgcG9ibGFjaW9uZXMgw6l0bmljYXMuCiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgcC5kLWZsZXgubXktNAogICAgICAgICAgICAgIGltZy5tZS0zKHNyYz0nQC9hc3NldHMvY29tcG9uZW50ZXMvbGluay5zdmcnIDpzdHlsZT0neyJtYXgtd2lkdGgiOiIxNnB4In0nKQogICAgICAgICAgICAgIGEoaHJlZj0naHR0cHM6Ly9wc2ljb2xvZ2lheW5lbnRlLmNvbS9zb2NpYWwvdGlwb3MtZXhjbHVzaW9uLXNvY2lhbCcgdGFyZ2V0PSdfYmxhbmsnIHJlbD0nbm9vcGVuZXIgbm9yZWZlcnJlcicpIEhlcm7DoW5kZXosIEwuIE0uQy4gKDIwMjApLiBMb3MgOSB0aXBvcyBkZSBleGNsdXNpw7NuIHNvY2lhbCwgeSBjw7NtbyBhZmVjdGFuIGEgbGEgY2l1ZGFkYW7DrWEuIHB5bU9yZ2FuaXphdGlvbi4KCiAgICAgICAgICAgIAogICAgICAgICAgICBwLmQtZmxleC5teS00CiAgICAgICAgICAgICAgaW1nLm1lLTMoc3JjPSdAL2Fzc2V0cy9jb21wb25lbnRlcy9saW5rLnN2ZycgOnN0eWxlPSd7Im1heC13aWR0aCI6IjE2cHgifScpCiAgICAgICAgICAgICAgYShocmVmPSdodHRwczovL3d3dy5rYWdnbGUuY29tLycgdGFyZ2V0PSdfYmxhbmsnIHJlbD0nbm9vcGVuZXIgbm9yZWZlcnJlcicpIEthZ2dsZS4KICAgICAgICAgICAgCiAgICAgICAgICAgIC8vLSBSZWZlcmVuY2lhIGRlIHlvdXR1YmUgCiAgICAgICAgICAgIHAuZC1mbGV4Lm15LTQKICAgICAgICAgICAgICBpbWcubWUtMyhzcmM9J0AvYXNzZXRzL3RlbXBsYXRlL2ljb25vLXl0LnN2ZycgOnN0eWxlPSd7Im1heC13aWR0aCI6IjE2cHgifScpCiAgICAgICAgICAgICAgYShocmVmPSdodHRwczovL3lvdXR1LmJlL3d6OFU5WU1ORU1JP3NpPVExb1g1ZWdxRDFOamdQZFUnIHRhcmdldD0nX2JsYW5rJyByZWw9J25vb3BlbmVyIG5vcmVmZXJyZXInKSBQYXN0b3JhbCBTb2NpYWwgZSBJbm5vdmFjacOzbiDigJMgTWFkcmlkLiAoMjAyMCkuIEVYQ0xVU0nDk04uIElhbi4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgLmNvbC0xMi5jb2wtbWQtNi5jb2wtbGctMy5vZmZzZXQtbGctMS5kLW5vbmUuZC1sZy1ibG9jawogICAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgICBpbWcoc3JjPSdAL2Fzc2V0cy9jb21wb25lbnRlcy9tYXRlcmlhbC1jb21wbGVtZW50YXJpby5zdmcnLCBhbHQ9JycpCgoKCgoKCgo="},null]}